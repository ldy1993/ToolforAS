apply plugin: 'com.android.library'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 28
        versionCode 11
        versionName "2.0.5"
        archivesBaseName = "SRnOTool_V" + defaultConfig.versionName + "_${releaseTime()}"

        packagingOptions {
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/NOTICE.txt'
        }
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
        ndk{
            //生成的so需要和外部的架构相同
            abiFilters "armeabi"
        }

    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

static def releaseTime() {
    return new Date().format("yyyyMMdd")
}

dependencies {
    compile 'com.android.support:support-v4:28.0.0'

    compile files('libs/glide-3.6.0.jar')
    compile files('libs/frame-release-v1.1.jar')
    compile files('libs/okhttp-3.3.0.jar')
    compile files('libs/okio-1.4.0.jar')
    compile files('libs/fastjson-1.2.2.jar')
    compile files('libs/httpclient-4.3.4.jar')
    compile files('libs/httpcore-4.3.2.jar')
    compile files('libs/dom4j-1.6.1.jar')
    compile files('libs/commons-codec-1.6.jar')


}
