apply plugin: 'com.android.library'

android {
  compileSdkVersion 28
  buildToolsVersion '26.0.2'

  defaultConfig {
    minSdkVersion 22
    targetSdkVersion 28
    versionCode 11
    versionName "1.1"
    archivesBaseName = "CodeInput"

  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}
task makeJar(dependsOn: ['compileReleaseJavaWithJavac'], type: Jar) {
  delete 'build/libs/yourname1.jar'
  delete 'build/libs/yourname2.jar'
  appendix = "demo"
  baseName = "androidJar"
  version = "1.0.0"
  classifier = "release"
  //后缀名
  extension = "jar"
  //最终的 Jar 包名，如果没设置，默认为 [baseName]-[appendix]-[version]-[classifier].[extension]
  archiveName = "yourname1.jar"
  //需打包的资源所在的路径集
  def srcClassDir = [project.buildDir.absolutePath + "/intermediates/classes/release"];
  //初始化资源路径集
  from srcClassDir
  //去除路径集下部分的资源
  exclude "okhttphelper/clz/com/okhttphelper/BuildConfig.class"
  exclude "**/R.class"
  exclude "**/R\$*.class"
  //只导入资源路径集下的部分资源
  include "okhttphelper/clz/com/okhttphelper/**/*.class"

}

dependencies {
  compile fileTree(include: ['*.jar'], dir: 'libs')
  compile files('libs/frame-release-v1.1.jar')
  compile files('libs/okhttp-3.3.0.jar')
  compile files('libs/okio-1.4.0.jar')
  compile files('libs/fastjson-1.2.2.jar')


}
